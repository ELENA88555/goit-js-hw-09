{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CApCZO,SAASC,cAAc,SAC/BC,iBAAiB,UAE5B,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcd,MAAMe,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAGjD,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDpB,EAAcoB,EAAUN,GACrBO,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,YAAW,KACTxB,EAAAyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAW,CAAIuB,SAAS,GAAQ,GACpFvB,EAAM,IAEVwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBoB,YAAW,KACTxB,EAAAyB,OAAOI,QAAQ,sBAAoB1B,QAAeC,MAAW,CAAIuB,SAAS,GAAQ,GACjFvB,EAAM,IAEbY,GAASI,EACTN,EAAMI,cAAcd,MAAMe,MAAQ,GAClCL,EAAMI,cAAcE,KAAKD,MAAQ,GACjCL,EAAMI,cAAcG,OAAOF,MAAO,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formSubmit = document.querySelector('.form');\nformSubmit.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        }, delay);\n      });\n    delay += step;\n    event.currentTarget.delay.value = \"\"\n    event.currentTarget.step.value = \"\"\n    event.currentTarget.amount.value =\"\"\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    }\n    reject({ position, delay });\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","Notify","success","useIcon","catch","failure"],"version":3,"file":"03-promises.cb65ad52.js.map"}