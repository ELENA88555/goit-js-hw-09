{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC7BC,YAAW,KAEHN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,I,CApCcQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE5B,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcf,MAAMgB,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAGjD,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAyB,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAW,CAAIuB,SAAS,GAAQ,IAGtFC,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MACpBJ,EAAAyB,OAAOI,QAAQ,sBAAoB1B,QAAeC,MAAW,CAAIuB,SAAS,GAAQ,IAGlFV,GAASI,EACXN,EAAMI,cAAcW,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formSubmit = document.querySelector('.form');\nformSubmit.addEventListener('submit', handleSubmitForm);\n\nfunction handleSubmitForm(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n      \n      })\n      .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n      ;\n      });\n      delay += step;\n    event.currentTarget.reset()\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => \n  setTimeout(() => {\n    {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }\n  }, delay)\n  \n    \n  )\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","Notify","success","useIcon","catch","failure","reset"],"version":3,"file":"03-promises.3d6d0c6c.js.map"}